library(dplyr)
require(curl)
# Example requests:
# data <- APIRequest("track", "Sultans of Swing", "Dire Straits")
#   Gets the top 10 results of the track "Sultan of Swing" by artist "Dire Straits"
#
# data <- APIRequest("artist", "", "Dire Straits", 50)
#   Gets the top 50 results of the  artist "Dire Straits"
#
# data <- APIRequest("track", "Sultans of Swing", "")
#   Gets the top 10 results of the  track "Sultans of Swing"
#
#
#
#
#
# Helper function to replace spaces with '%20'
SwapSpaces <- function(str){
return(gsub(" ","%20",str))
}
# Method that sends the actual API request
# Has the api root and api key hard-coded in
# type: the formatted type string for the request (e.g. 'track.search?')
# request: the formatted request (e.g. &q_track=Sultans%20of%20Swing)
SendAPIRequest <- function(type, request, num.results){
api.root = 'http://api.musixmatch.com/ws/1.1/'
api.key = 'apikey=6e94e896d4f21b051076e5bb8679c724'
page.size = paste0('&page_size=',num.results)
has.lyrics="&f_has_lyrics=1"
final.request <- paste0(api.root,type,api.key,request,page.size,has.lyrics)
print(final.request)
return(fromJSON(final.request))
}
# USE THIS METHOD
# query.type: the type of query that is being done (e.g. 'track', 'artist).
# song.name: the name of the song (blank if there is no name).
# artist.name: the name of the artist (blank if there is no artist).
# num.results: the number of results to return. The default (if left blank) is 10.
APIRequest <- function(query.type, song.name, artist.name, num.results=1){
song.name = trimws(song.name)
artist.name = trimws(artist.name)
if(query.type == 'track'){
search = paste(song.name,artist.name)
}
if(query.type == 'artist'){
search = paste(artist.name)
}
type = paste0(query.type,'.search?')
search.type = paste0('&q_',query.type,'=')
query = paste0(search.type, SwapSpaces(search))
return(SendAPIRequest(type, query, num.results))
}
# Internal method for reducing redundancy.
# Checks if the given name is an empty string. If it is not empty, formats it and appends the given add to it.
# If name is equal to "", returns ""
LyricCheckHelper <- function(name, add){
name.part = ""
if(name != ""){
formatted = SwapSpaces(name)
name.part <- paste0(add,formatted)
}
return(name.part)
}
# Gets the lyrics for the specified song.
# If an artist name is given, will use the song by the artist
# Otherwise, uses first hit
# Parameters:
#   song.name: The name of the song. (e.g. "Sultans Of Swing")
#   artist.name (optional): The name of the artist. (e.g. "Dire Straits"). If no artist is given, will use the top hit.
# Returns:
#   Character array of the lyrics, with escape characters (/n, etc.) included. Also has the necessary copyright information at the end.
GetLyrics <- function(song.name, artist.name=""){
data <- GetSongData(song.name, artist.name)
track.id <-  data$message$body$track_list$track$track_id
return(GetLyricsData(track.id))
}
# Internal method for getting song data
# Paramter:
#   song.name: The name of the song. (e.g. "Sultans Of Swing")
#   artist.name (optional): The name of the artist. (e.g. "Dire Straits"). If no artist is given, will use the top hit.
# Returns:
#   List of information. Useful values:
#     $track_length: Gives the length of the track (in seconds)
#     $album_name: Gives the album name of the track
#     $first_release_date: Gives the first release data (year-month-dayThour:minute:second)
#     $primary_genres: Gives the genres of the music, in the form of a list.
#
GetSongData <- function(song.name, artist.name=""){
song.search <- LyricCheckHelper(song.name, "&q_track=")
artist.search <- LyricCheckHelper(artist.name, "&q_artist=")
full.search <- paste0(song.search, artist.search)
data <- SendAPIRequest("track.search?", full.search, 1)
filtered.data <- data$message$body$track_list$track
return(filtered.data)
}
# Internal method for getting lyric data
# Paramter:
#   track.id: the musixmatch id of the track
# Returns:
#   Character array of the lyrics
GetLyricsData <- function(track.id){
lyrics.search <- paste0("&track_id=",track.id)
lyric.data <- SendAPIRequest("track.lyrics.get?",lyrics.search,1)
return(lyric.data$message$body$lyrics$lyrics_body)
}
# Gets the url for a youtube video from the keyword given
# Parameter:
#   video.search: the search query
# Return:
#   The id of the video on youtube
GetYouTubeVideoID <- function(video.search){
api.key = 'AIzaSyC5B_muf0KvmTYaGKAsOm0VHQ-VpTGIZik'
base.url = 'https://www.googleapis.com/youtube/v3'
formatted.video.search = SwapSpaces(video.search)
search = paste0(base.url,"/search?part=snippet&q=",formatted.video.search,"&type=video&key=",api.key)
data <- fromJSON(search)
video.id <- data$items$id$videoId[[1]]
return(video.id)
}
# Exampole url:
# https://www.youtube.com/watch?v=G2tWhjEbfSQ
# base = https://www.youtube.com/watch?
# v= (Video equals)
# G2tWhjEbfSQ video id
View(GetSongData("Sultans of Swing"))
View(GetSongData("Sultans of Swing"))
View(flatten(GetSongData("Sultans of Swing"))
.
View(flatten(GetSongData("Sultans of Swing")))
View(flatten(GetSongData("Sultans of Swing")))
ParseData <- function(track.data){
parsed.data <- mutate(track.data, "Date Released" = track.data$first_released_date)
}
#
ParseData <- function(track.data){
parsed.data <- mutate(track.data, "Date Released" = track.data$first_released_date)
return(parsed.data)
}
ParseData(GetSongData("Sultans of Swing"))
#
ParseData <- function(track.data){
parsed.data <- select(track.data, track.data$first_released_date)
return(parsed.data)
}
ParseData(GetSongData("Sultans of Swing"))
ParseData <- function(track.data){
parsed.data <- select(track.data, first_released_date)
return(parsed.data)
}
ParseData(GetSongData("Sultans of Swing"))
#
ParseData <- function(track.data){
parsed.data <- select(track.data, first_release_date)
return(parsed.data)
}
ParseData(GetSongData("Sultans of Swing"))
View(ParseData(GetSongData("Sultans of Swing")))
View(GetSongData("Sultans of Swing"))
ParseData <- function(track.data){
parsed.data <- select(track.data,
first_release_date,
primary_genres.music_genre_list)
return(parsed.data)
}
View(ParseData(GetSongData("Sultans of Swing")))
View(GetSongData("Sultans of Swing"))
View(GetSongData("Sultans of Swing")$primary_genres.music_genre_list)
GetSON
GetSongData("Sultans of Swing")$primary_genres.music_genre_list
GetSongData("Sultans of Swing")$track_id
GetSongData("Sultans of Swing")$primary_genres.music_genre_list
Sultans.test.data  <- GetSongData("Sultans of Swing")
View(Sultans.test.data)
Sultans.test.data$primary_genres
#
ParseData <- function(track.data){
parsed.data <- select(track.data,
first_release_date,
primary_genres)
return(parsed.data)
}
ParseData(GetSongData("Sultans of Swing"))
View(ParseData(GetSongData("Sultans of Swing")))
View(Sultans.test.data$primary_genres)
Sultans.test.data$primary_genres
View(flatten(Sultans.test.data$primary_genres)
)
Sultans.test.data$primary_genres[1]
Sultans.test.data$primary_genres[2]
Sultans.test.data$primary_genres[1,1]
Sultans.test.data$primary_genres[1,2]
Sultans.test.data$primary_genres[1,3]
Sultans.test.data$primary_genres[1]
Sultans.test.data$primary_genres[0]
Sultans.test.data$primary_genres[1][1]
Sultans.test.data$primary_genres[1][1][1]
Sultans.test.data$primary_genres[1](1)
Sultans.test.data$primary_genres(1)
Sultans.test.data$primary_genres
Sultans.test.data$primary_genres$music_genre_list
Sultans.test.data$primary_genres$music_genre_list
View(Sultans.test.data$primary_genres$music_genre_list)
View(Sultans.test.data$primary_genres$music_genre_list$music_genre_name)
View(Sultans.test.data$primary_genres$music_genre_list)
View(Sultans.test.data$primary_genres$music_genre_list$music.genre)
View(Sultans.test.data$primary_genres$music_genre_list)
View(Sultans.test.data$primary_genres$music_genre_list$music_genre.music_genre_name)
View(Sultans.test.data$primary_genres$music_genre_list$)
View(Sultans.test.data$primary_genres$music_genre_list)
View(Sultans.test.data$primary_genres$music_genre_list$name)
View(Sultans.test.data$primary_genres$music_genre_list)
Sultans.test.data$primary_genres$music_genre_list
Sultans.test.data$primary_genres$music_genre_list$music_genre.music_genre_name
Sultans.test.data$primary_genres$music_genre_list$music_genre_name
Sultans.test.data$primary_genres$music_genre_list$name
Sultans.test.data$primary_genres$music_genre_list
Sultans.test.data.2  <- Sultans.test.data$primary_genres$music_genre_list
Sultans.test.data.2
View(Sultans.test.data.2)
Sultans.test.data.2[3]
Sultans.test.data.2[4]
Sultans.test.data.2[1]
Sultans.test.data.2[[1]]
Sultans.test.data.2[[1]][3]
Sultans.test.data.2[[1]][1]
Sultans.test.data.2[[1]][2]
Sultans.test.data.2$music_genre_name
Sultans.test.data.2$music_genre_name:chr
Sultans.test.data.2[[1]]
Sultans.test.data.2[[1]][5]
Sultans.test.data.2[[1]][2]
Sultans.test.data.2[[1]][1]
Sultans.test.data.2[[1]][2]
Sultans.test.data.2[[4]][1]
Sultans.test.data.2[[1]]
Sultans.test.data.2$music_genre
Sultans.test.data.2$data.frame
Sultans.test.data.2
Sultans.test.data$primary_genres$music_genre_list
Sultans.test.data$primary_genres$music_genre_list[2]
as.data.frame(Sultans.test.data$primary_genres$music_genre_list)
is.data.frame(Sultans.test.data$primary_genres$music_genre_list)
is.data.frame(as.data.frame(Sultans.test.data$primary_genres$music_genre_list))
as.data.frame(Sultans.test.data$primary_genres$music_genre_list)$music_genre
as.data.frame(Sultans.test.data$primary_genres$music_genre_list)$music_genre_name
as.data.frame(Sultans.test.data$primary_genres$music_genre_list)$music_genre$music_genre_name
ParseData <- function(track.data){
parsed.data <- select(track.data,
first_release_date,
as.data.frame(Sultans.test.data$primary_genres$music_genre_list)$music_genre$music_genre_name)
return(parsed.data)
}
ParseData(GetSongData("Sultans of Swing"))
ParseData <- function(track.data){
parsed.data <- select(track.data,
first_release_date,
Sultans.test.data$primary_genres$music_genre_list$music_genre$music_genre_name)
return(parsed.data)
}
ParseData(GetSongData("Sultans of Swing"))
ParseData <- function(track.data){
parsed.data <- select(track.data,
first_release_date,
primary_genres$music_genre_list$music_genre$music_genre_name)
return(parsed.data)
}
ParseData(GetSongData("Sultans of Swing"))
ParseData(GetSongData("Sultans of Swing"))
as.data.frame(Sultans.test.data$primary_genres$music_genre_list)$music_genre$music_genre_name
ParseData <- function(track.data){
parsed.data <- select(track.data,
first_release_date,
artist_name
) %>%
mutate(as.data.frame(track.data$primary_genres$music_genre_list)$music_genre$music_genre_name)
return(parsed.data)
}
ParseData(GetSongData("Sultans of Swing"))
View(ParseData(GetSongData("Sultans of Swing")))
ParseData <- function(track.data){
parsed.data <- select(track.data,
first_release_date,
artist_name
) %>%
mutate("genre" == as.data.frame(track.data$primary_genres$music_genre_list)$music_genre$music_genre_name)
return(parsed.data)
}
View(ParseData(GetSongData("Sultans of Swing")))
#
ParseData <- function(track.data){
parsed.data <- select(track.data,
first_release_date,
artist_name
) %>%
mutate("genre" = as.data.frame(track.data$primary_genres$music_genre_list)$music_genre$music_genre_name)
return(parsed.data)
}
View(ParseData(GetSongData("Sultans of Swing")))
ParseData <- function(GetSongData){
parsed.data <- select(track.data,
first_release_date,
artist_name
) %>%
mutate("genre" = as.data.frame(track.data$primary_genres$music_genre_list)
$music_genre$music_genre_name)
return(parsed.data)
}
ParseData()
ParseData("Sultans of Swing")
ParseData <- function(track.data = GetSongData){
parsed.data <- select(track.data,
first_release_date,
artist_name
) %>%
mutate("genre" = as.data.frame(track.data$primary_genres$music_genre_list)
$music_genre$music_genre_name)
return(parsed.data)
}
ParseData("Sultans of Swing")
ParseData <- function(track.data){
parsed.data <- select(track.data,
first_release_date,
artist_name
) %>%
mutate("genre" = as.data.frame(track.data$primary_genres$music_genre_list)
$music_genre$music_genre_name)
return(parsed.data)
}
ParseData(GetSongData("Sultans of Swing"))
GetSongData("Sultans of Swing")$album_coverart_100x100
ParseData <- function(track.data){
parsed.data <- select(track.data,
first_release_date,
artist_name,
album_coverart_100x100
) %>%
mutate("genre" = as.data.frame(track.data$primary_genres$music_genre_list)
$music_genre$music_genre_name)
return(parsed.data)
}
ParseData(GetSongData("Sultans of Swing"))
View(ParseData(GetSongData("Sultans of Swing")))
ParseData <- function(track.data){
parsed.data <- select(track.data,
'Release date' = first_release_date,
'Artist name' = artist_name,
'Album cover art' = album_coverart_100x100
) %>%
mutate("genre" = as.data.frame(track.data$primary_genres$music_genre_list)
$music_genre$music_genre_name)
return(parsed.data)
}
View(ParseData(GetSongData("Sultans of Swing")))
View(Sultans.test.data)
Sultans.test.data$first_release_date
as.Date(Sultans.test.data$first_release_date)
ParseData <- function(track.data){
parsed.data <- mutate("genre" = as.data.frame(track.data$primary_genres$music_genre_list)
$music_genre$music_genre_name,
'first_release.date' = as.Date(track.data$first_release_date)
) %>%
select(track.data,
artist_name,
album_coverart_100x100
)
return(parsed.data)
}
View(ParseData(GetSongData("Sultans of Swing")))
ParseData <- function(track.data){
parsed.data <- mutate("genre" = as.data.frame(track.data$primary_genres$music_genre_list)
$music_genre$music_genre_name,
'first_release.date' = as.Date(track.data$first_release_date)
) %>%
select(artist_name,
album_coverart_100x100
)
return(parsed.data)
}
View(ParseData(GetSongData("Sultans of Swing")))
ParseData <- function(track.data){
parsed.data <- track.data %>%
mutate("genre" = as.data.frame(track.data$primary_genres$music_genre_list)
$music_genre$music_genre_name,
'first_release.date' = as.Date(track.data$first_release_date)
) %>%
select(artist_name,
album_coverart_100x100
)
return(parsed.data)
}
View(ParseData(GetSongData("Sultans of Swing")))
ParseData <- function(track.data){
parsed.data <- select(track.data,
as.Date(first_release_date),
artist_name,
album_coverart_100x100
) %>%
mutate("genre" = as.data.frame(track.data$primary_genres$music_genre_list)
$music_genre$music_genre_name)
return(parsed.data)
}
View(ParseData(GetSongData("Sultans of Swing")))
ParseData <- function(track.data){
parsed.data <- select(track.data,
first_release_date,
artist_name,
album_coverart_100x100
) %>%
mutate("genre" = as.data.frame(track.data$primary_genres$music_genre_list)
$music_genre$music_genre_name)
return(parsed.data)
}
View(ParseData(GetSongData("Sultans of Swing")))
ParseData <- function(track.data){
parsed.data <- track.data %>%
mutate("genre" = as.data.frame(track.data$primary_genres$music_genre_list)
$music_genre$music_genre_name) %>%
select(
first_release_date,
artist_name,
album_coverart_100x100
)
return(parsed.data)
}
View(ParseData(GetSongData("Sultans of Swing")))
ParseData <- function(track.data){
parsed.data <- select(track.data,
first_release_date,
artist_name,
album_coverart_100x100
) %>%
mutate("genre" = as.data.frame(track.data$primary_genres$music_genre_list)
$music_genre$music_genre_name)
return(parsed.data)
}
View(ParseData(GetSongData("Sultans of Swing")))
ParseData <- function(track.data){
parsed.data <- select(track.data,
first_release_date,
artist_name,
album_coverart_100x100,
track_rating
) %>%
mutate("genre" = as.data.frame(track.data$primary_genres$music_genre_list)
$music_genre$music_genre_name)
return(parsed.data)
}
View(ParseData(GetSongData("Sultans of Swing")))
GetParseData <- function(track.data){
parsed.data <- select(track.data,
first_release_date,
artist_name,
album_coverart_100x100,
track_rating
) %>%
mutate("genre" = as.data.frame(track.data$primary_genres$music_genre_list)
$music_genre$music_genre_name)
return(parsed.data)
}
View(GetParseData(GetSongData("Sultans of Swing")))
GetParseData <- function(filtered.data){
parsed.data <- select(filtered.data,
first_release_date,
artist_name,
album_coverart_100x100,
track_rating
) %>%
mutate("genre" = as.data.frame(track.data$primary_genres$music_genre_list)
$music_genre$music_genre_name)
return(parsed.data)
}
View(GetParseData(GetSongData("Sultans of Swing")))
View(GetParseData(GetSongData("Sultans of Swing")))
GetParseData <- function(filtered.data){
parsed.data <- select(filtered.data,
first_release_date,
artist_name,
album_coverart_100x100,
track_rating
) %>%
mutate("genre" = as.data.frame(filtered.data$primary_genres$music_genre_list)
$music_genre$music_genre_name)
return(parsed.data)
}
View(GetParseData(GetSongData("Sultans of Swing")))
GetParseData <- function(filtered.data){
parsed.data <- filtered.data %>%
select(first_release_date,
artist_name,
album_coverart_100x100,
track_rating
) %>%
mutate("genre" = as.data.frame(filtered.data$primary_genres$music_genre_list)
$music_genre$music_genre_name)
return(parsed.data)
}
View(GetParseData(GetSongData("Sultans of Swing")))
GetParsedData <- function(filtered.data){
parsed.data <- filtered.data %>%
select(first_release_date,
artist_name,
album_coverart_100x100,
track_rating
) %>%
mutate("genre" = as.data.frame(filtered.data$primary_genres$music_genre_list)
$music_genre$music_genre_name)
return(parsed.data)
}
View(GetParsedData(GetSongData("Sultans of Swing")))
Sultans.test.data$track_length
Sultans.test.data$album_name
View(GetParsedData(GetSongData("Sultans of Swing")))
